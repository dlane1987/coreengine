<?php
/**
 * Power Framework.
 *
 * WARNING: This file is part of the core Power Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Power\Options
 * @author  CoreEngine
 * @license GPL-2.0-or-later
 * @link    www.daniellane.eu
 */

/**
 * Helper function for the Power Breadcrumb Class.
 *
 * @since 1.0.0
 *
 * @global Power_Breadcrumb $_power_breadcrumb
 *
 * @param array $args Breadcrumb arguments.
 */
function power_breadcrumb( $args = [] ) {

	global $_power_breadcrumb;

	if ( ! $_power_breadcrumb ) {
		$_power_breadcrumb = new Power_Breadcrumb();
	}

	$_power_breadcrumb->output( $args );

}

/**
 * Are breadcrumbs hidden for the current page?
 *
 * Indicates that the “Hide breadcrumbs” checkbox is enabled and checked.
 *
 * @since 3.1.0
 *
 * @return bool True if breadcrumbs are hidden, false otherwise.
 */
function power_breadcrumbs_hidden_on_current_page() {

	// No “hide breadcrumbs” option is currently offered on non-singular page types, such as category archives.
	if ( ! is_singular() && ! is_home() ) {
		return false;
	}

	/**
	 * Prevents the “hide breadcrumbs” checkbox from appearing or functioning by returning false.
	 *
	 * @since 3.1.0
	 *
	 * @param bool $breadcrumbs_toggle_enabled True if breadcrumbs toggle is enabled, false otherwise.
	 */
	$breadcrumbs_toggle_enabled = apply_filters( 'power_breadcrumbs_toggle_enabled', true );

	if ( ! $breadcrumbs_toggle_enabled ) {
		return false;
	}

	return get_post_meta( get_queried_object_id(), '_power_hide_breadcrumbs', true );

}

/**
 * Are breadcrumbs disabled for the current page type?
 *
 * @since 3.1.1
 *
 * @return bool True if breadcrumbs are disabled, false otherwise.
 */
function power_breadcrumbs_disabled_on_current_page() {
	return ( is_single() && ! power_get_option( 'breadcrumb_single' ) )
		|| ( is_page() && ! power_get_option( 'breadcrumb_page' ) && ! is_front_page() )
		|| ( is_404() && ! power_get_option( 'breadcrumb_404' ) )
		|| ( is_attachment() && ! power_get_option( 'breadcrumb_attachment' ) )
		|| ( ( 'posts' === get_option( 'show_on_front' ) && is_home() ) && ! power_get_option( 'breadcrumb_home' ) )
		|| ( ( 'page' === get_option( 'show_on_front' ) && is_front_page() ) && ! power_get_option( 'breadcrumb_front_page' ) )
		|| ( ( 'page' === get_option( 'show_on_front' ) && is_home() ) && ! power_get_option( 'breadcrumb_posts_page' ) )
		|| ( ( is_archive() || is_search() ) && ! power_get_option( 'breadcrumb_archive' ) );
}

add_action( 'power_before_loop', 'power_do_breadcrumbs' );
/**
 * Display Breadcrumbs above the Loop. Concedes priority to popular breadcrumb
 * plugins.
 *
 * @since 1.0.0
 *
 * @return void Return early if Power settings dictate that no breadcrumbs should show in current context.
 */
function power_do_breadcrumbs() {

	/**
	 * Do not output breadcrumbs if filter returns true.
	 *
	 * @since 3.1.0
	 *
	 * @param bool $breadcrumbs_hidden True to hide breadcrumbs, false to show them.
	 */
	$power_breadcrumbs_hidden = apply_filters( 'power_do_breadcrumbs', power_breadcrumbs_hidden_on_current_page() );

	if ( $power_breadcrumbs_hidden ) {
		return;
	}

	if ( power_breadcrumbs_disabled_on_current_page() ) {
		return;
	}

	$config = power_get_config( 'breadcrumbs' );

	if ( function_exists( 'bcn_display' ) ) {
		// phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped
		echo $config['prefix'];
		bcn_display();
		// phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped
		echo $config['suffix'];
	} elseif ( class_exists( 'WPSEO_Breadcrumbs' ) && power_get_option( 'breadcrumbs-enable', 'wpseo_titles' ) ) {
		yoast_breadcrumb( $config['prefix'], $config['suffix'] );
	} elseif ( function_exists( 'yoast_breadcrumb' ) && ! class_exists( 'WPSEO_Breadcrumbs' ) ) {
		yoast_breadcrumb( $config['prefix'], $config['suffix'] );
	} else {
		power_breadcrumb( $config );
	}

}

/**
 * Gets breadcrumb options that are enabled in Power settings.
 *
 * @since 3.1.0
 *
 * @return array The breadcrumb options that are enabled.
 */
function power_breadcrumb_options_enabled() {
	$power_options = get_option( POWER_SETTINGS_FIELD );

	$active_breadcrumb_types = array_filter(
		$power_options,
		function ( $value, $option_name ) {
			return strpos( $option_name, 'breadcrumb_' ) === 0 && $value;
		},
		ARRAY_FILTER_USE_BOTH
	);

	return array_keys( $active_breadcrumb_types );
}
